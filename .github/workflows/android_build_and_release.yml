name: Android Build and Release

on:
  push:
    branches: [main]

jobs:
  setup_and_build_android:
    name: Setup and Build App Bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup Java to compile the Android project
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"

      - name: Decode Android keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE_64 }}" | base64 --decode > android/app/upload-keystore.jks

      - name: Decode Android key properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES_BASE_64 }}" | base64 --decode > android/key.properties

      - name: Decode .env file
        run: echo "${{ secrets.DOT_ENV_BASE_64 }}" | base64 --decode > .env

      - name: Decode google-services.json
        run: echo "${{ secrets.ANDROID_GOOGLE_SERVICES_JSON_BASE_64 }}" | base64 --decode > android/app/google-services.json

      - name: Decode AndroidManifest.xml
        run: echo "${{ secrets.ANDROID_MANIFEST_BASE_64 }}" | base64 --decode > android/app/src/main/AndroidManifest.xml

      - name: Decode google sign in files
        run: |
          echo "${{ secrets.ANDROID_GOOGLE_SIGN_IN_1_BASE_64 }}" | base64 --decode > ${{ secrets.ANDROID_GOOGLE_SIGN_IN_1_FILE_PATH }}
          echo "${{ secrets.ANDROID_GOOGLE_SIGN_IN_2_BASE_64 }}" | base64 --decode > ${{ secrets.ANDROID_GOOGLE_SIGN_IN_2_FILE_PATH }}
          echo "${{ secrets.ANDROID_GOOGLE_SIGN_IN_3_BASE_64 }}" | base64 --decode > ${{ secrets.ANDROID_GOOGLE_SIGN_IN_3_FILE_PATH }}

      - name: Run flutter pub get
        run: flutter pub get

      - name: Build aab
        run: flutter build appbundle --flavor production --target lib/main_production.dart

      - name: Upload generated aab to the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aab-stores
          path: build/app/outputs/bundle/productionRelease/app-production-release.aab

  release_to_play_store:
    name: Release to Play Store
    needs: setup_and_build_android
    runs-on: ubuntu-latest
    steps:
      - name: Download App Bundle
        uses: actions/download-artifact@v4
        with:
          name: aab-stores
          path: build/app/outputs/bundle/productionRelease/

      - name: Decode Android Service Account
        run: echo "${{ secrets.ANDROID_RELEASE_SERVICE_ACCOUNT_BASE_64 }}" | base64 --decode > store_credentials.json

      - name: Deploy to Play Store (Internal testing)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: store_credentials.json
          packageName: com.alastairrmcneill.TwoEightTwo
          releaseFiles: build/app/outputs/bundle/productionRelease/app-production-release.aab
          track: beta
          status: draft
